import jwt from 'jsonwebtoken'

export const verifyToken = (req, res, next) => {
  const authHeader = req.headers['authorization']
  const token = authHeader && authHeader.split(' ')[1]

  if (!token) {
    console.warn('üîí No se proporcion√≥ token en la cabecera Authorization.')
    return res.status(401).json({ error: 'Token no proporcionado' })
  }

  jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {
    if (err) {
      console.error('‚ùå Token inv√°lido o expirado:', err.message)
      return res.status(403).json({ error: 'Token inv√°lido o expirado' })
    }

    // üîç Consola para validar que el token tiene el rol
    console.log('‚úÖ Token verificado - usuario:', decoded)

    // Aseg√∫rate de que `rol` est√° presente y es un n√∫mero
    if (!decoded.rol || typeof decoded.rol !== 'number') {
      console.warn('‚ö†Ô∏è El token no contiene un rol v√°lido')
      return res.status(403).json({ error: 'Rol no v√°lido en el token' })
    }

    req.user = decoded
    next()
  })
}
